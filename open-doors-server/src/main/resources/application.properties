#Spring DataSource driver
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/open_doors_security_db

#Connection credentials
spring.datasource.username=postgres
spring.datasource.password=opendoors

spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1


spring.jpa.hibernate.ddl-auto = update

spring.jpa.show-sql = true
spring.jpa.properties.hibernate.format_sql=true

spring.sql.init.mode=always

#https://stackoverflow.com/questions/43905119/postgres-error-method-org-postgresql-jdbc-pgconnection-createclob-is-not-imple
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#Hibernate optimization for Postgres db
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

server.port=8443

server.ssl.certificate=../open-doors-client/ang-cert/certificate.crt
server.ssl.certificate-private-key=../open-doors-client/ang-cert/private.key

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

spring.security.oauth2.client.registration.keycloak.client-id=open-doors-app
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://127.0.0.1:8080/realms/OpenDoorsKeycloak
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://127.0.0.1:8080/realms/OpenDoorsKeycloak
